************************************************************************
* Build and Install HDF4 C/C++ Library with CMake                      *
************************************************************************

Notes: This short instruction is written for users who want to quickly build 
       HDF4 library and tools from the HDF4 source code package using the 
       CMake tools.
       
       More information about using CMake can be found at the KitWare site, 
       www.cmake.org.
         
       CMake uses the command line, however the visual CMake tool is 
       available for the configuration step. The steps are similar for
       all the operating systems supported by CMake.
       
       NOTES:
         1. Using CMake for building and using HDF4 is under active development. 
            While we have attempted to provide error-free files, please 
            understand that development with CMake has not been extensively 
            tested outside of HDF. The CMake specific files may change
            before the next release.
            
         2. CMake was originally introduced to support development on Windows, 
            however it should be usable on any system where CMake is supported. 
            Please send us any comments on how CMake support can be improved on 
            any system. Visit the KitWare site for more information about CMake.
            
         3. If you are building HDF4 on Windows, do NOT use or execute any
            files from the windows folder.
            
         4. Build and test results can be submitted to our CDash server at:
            cdash.hdfgroup.uiuc.edu. 
            Please read the HDF and CDash document at:
            www.hdfgroup.org/CDash/HowToSubmit. 
            

========================================================================
                            Preconditions                                                           
========================================================================                          

   1. We suggest you obtain the latest CMake for windows from the Kitware
      web site. The HDF4 4.2.x product requires CMake version 2.8.6.                     
                                                                         
   2. If you plan to use Zlib or Szip, or JPEG (version 6b or 8b is required);
      A. Download the packages and install them
         in a central location. For example on Windows, create a folder extlibs 
         and install the packages there. Windows users should also read Section V
         in INSTALL_Windows.txt.
         NOTE: HDF has updated libraries (and source) for full use with CMake.
         
      B. Use source packages from a SVN server by adding the following CMake 
         options:
            HDF4_ALLOW_EXTERNAL_SUPPORT:STRING="SVN"
            JPEG_SVN_URL:STRING="http://some_location/jpeg/trunk"
            ZLIB_SVN_URL:STRING="http://some_location/zlib/trunk"
            SZIP_SVN_URL:STRING="http://some_location/szip/trunk"
         where "some_location" is the URL to the SVN repository.
         
      C. Use source packages from a compressed file by adding the following CMake 
         options:
            HDF4_ALLOW_EXTERNAL_SUPPORT:STRING="TGZ"
            JPEG_TGZ_NAME:STRING="jpeg_src.ext"
            ZLIB_TGZ_NAME:STRING="zlib_src.ext"
            SZIP_TGZ_NAME:STRING="szip_src.ext"
            TGZ_PATH:STRING="some_location"
         where "some_location" is the URL or full path to the compressed file and 
         ext is the type of compression file.
                                                                         
   3. If you are building under CYGWIN set the following option;
            HDF4_BUILD_XDR_LIB:BOOL=ON
                                    
                                                                         
========================================================================
          Building HDF4 C/C++ Libraries with CMake
========================================================================

   1. Run CMake

      The CMake executable is named "cmake-gui.exe" on Windows and should be
      available in your Start menu. For Linux, UNIX, and Mac users the
      executable is named "cmake-gui" and can be found where CMake was 
      installed. 
      Specify the source and build directories. It is recommended that you 
      choose a build directory different then the source directory 
      (for example on Windows, if the source is at c:\MyHDFstuff\HDF4, then
      use c:\MyHDFstuff\HDF4\build or c:\MyHDFstuff\build\HDF4). 
      
      OPTIONAL:
        Users can perform the configuration step without using the visual cmake-gui
        program. We use the file cacheinit.cmake in the config/cmake folder for
        our testing. This file enables all the basic options and we turn specific 
        options on or off for testing using the following command line within the build
        directory:
        
        cmake -C <sourcepath>/config/cmake/cacheinit.cmake -G "<generator>"  [-D<options>]  <sourcepath>
        
        Where <generator> is    
            * Borland Makefiles
            * MSYS Makefiles
            * MinGW Makefiles
            * NMake Makefiles
            * Unix Makefiles
            * Visual Studio 10
            * Visual Studio 10 Win64
            * Visual Studio 6
            * Visual Studio 7
            * Visual Studio 7 .NET 2003
            * Visual Studio 8 2005
            * Visual Studio 8 2005 Win64
            * Visual Studio 9 2008
            * Visual Studio 9 2008 Win64

        <options> is:
            * SZIP_INCLUDE_DIR:PATH=<path to szip includes directory>
            * SZIP_LIBRARY:FILEPATH=<path to szip/library file>
            * ZLIB_INCLUDE_DIR:PATH=<path to zlib includes directory>
            * ZLIB_LIBRARY:FILEPATH=<path to zlib/library file>
            * JPEG_INCLUDE_DIR:PATH=<path to jpeg includes directory>
            * JPEG_LIBRARY:FILEPATH=<path to jpeg/library file>
            * <HDF4OPTION>:BOOL=[ON | OFF]

        <cacheinit.cmake> is:
            # This is the CMakeCache file.
            ########################
            # EXTERNAL cache entries
            ########################
            SET (BUILD_SHARED_LIBS ON CACHE BOOL "Build Shared Libraries" FORCE)
            SET (BUILD_TESTING ON CACHE BOOL "Build HDF4 Unit Testing" FORCE)
            SET (HDF4_BUILD_EXAMPLES ON CACHE BOOL "Build HDF4 Library Examples" FORCE)
            SET (HDF4_BUILD_FORTRAN ON CACHE BOOL "Build FORTRAN support" FORCE)
            SET (HDF4_BUILD_TOOLS ON CACHE BOOL "Build HDF4 Tools" FORCE)
            SET (HDF4_BUILD_UTILS ON CACHE BOOL "Build HDF4 Library Utilities" FORCE)
            SET (HDF4_ENABLE_NETCDF ON CACHE BOOL "Build HDF4 versions of NetCDF-3 APIS" FORCE)
            SET (HDF4_BUILD_XDR_LIB OFF CACHE BOOL "Build HDF4 XDR Library" FORCE)
            SET (HDF4_ENABLE_PARALLEL OFF CACHE BOOL "Enable parallel build (requires MPI)" FORCE)
            SET (MPIEXEC_MAX_NUMPROCS "3" CACHE STRING "Minimum number of processes for HDF parallel tests" FORCE)
            SET (HDF4_ENABLE_JPEG_LIB_SUPPORT ON CACHE BOOL "Enable Jpeg library" FORCE)
            SET (HDF4_ENABLE_Z_LIB_SUPPORT ON CACHE BOOL "Enable Zlib Filters" FORCE)
            SET (HDF4_ENABLE_SZIP_SUPPORT ON CACHE BOOL "Use SZip Filter" FORCE)
            SET (HDF4_ENABLE_SZIP_ENCODING ON CACHE BOOL "Use SZip Encoding" FORCE)
            SET (HDF4_ENABLE_COVERAGE OFF CACHE BOOL "Enable code coverage for Libraries and Programs" FORCE)
            SET (HDF4_DISABLE_COMPILER_WARNINGS OFF CACHE BOOL "Disable compiler warnings" FORCE)
            SET (HDF4_PACKAGE_EXTLIBS OFF CACHE BOOL "(WINDOWS)CPACK - include external libraries" FORCE)
            SET (HDF4_NO_PACKAGES OFF CACHE BOOL "CPACK - Disable packaging" FORCE)
            SET (HDF4_ALLOW_EXTERNAL_SUPPORT "NO" CACHE STRING "Allow External Library Building" FORCE)
            SET (ZLIB_SVN_URL "http://svn.hdfgroup.uiuc.edu/zlib/trunk" CACHE STRING "Use ZLib from HDF repository" FORCE)
            SET (SZIP_SVN_URL "http://svn.hdfgroup.uiuc.edu/szip/trunk" CACHE STRING "Use SZip from HDF repository" FORCE)
            SET (JPEG_SVN_URL "http://svn.hdfgroup.uiuc.edu/jpeg/branches/jpeg8b" CACHE STRING "Use JPEG from HDF repository" FORCE)
            SET (ZLIB_TGZ_NAME "ZLib.tar.gz" CACHE STRING "Use ZLib from compressed file" FORCE)
            SET (SZIP_TGZ_NAME "SZip.tar.gz" CACHE STRING "Use SZip from compressed file" FORCE)
            SET (JPEG_TGZ_NAME "JPEG8b.tar.gz" CACHE STRING "Use JPEG from compressed file" FORCE)

   2. Configure the cache settings

      2.1  Click the Configure button. If this is the first time you are 
           running cmake-gui in this directory, you will be prompted for the 
           generator you wish to use (for example on Windows, Visual Studio 9 2008). 
           CMake will read in the CMakeLists.txt files from the source directory and 
           display options for the HDF4 project. After the first configure you 
           can adjust the cache settings and/or specify locations of other programs.
      
           Any conflicts or new values will be highlighted by the configure
           process in red. Once you are happy with all the settings and there are no 
           more values in red, click the Generate button to produce the appropriate 
           build files. 
      
           On Windows, if you are using a Visual Studio generator, the solution and 
           project files will be created in the build folder.
      
           On linux, if you are using the Unix Makefiles generator, the Makefiles will
           be created in the build folder.

      2.2  Alternative command line example on Windows in c:\MyHDFstuff\HDF4\build directory:
      
               cmake -C ../config/cmake/cacheinit.cmake -G "Visual Studio 9 2008" \
               -DHDF4_ENABLE_SZIP_SUPPORT:BOOL=OFF -DHDF4_ENABLE_Z_LIB_SUPPORT:BOOL=OFF ..

   3. Build HDF4
   
      On Windows, you can build HDF4 using either the Visual Studio Environment 
      or the command line. The command line is used on linux, Unix, and Mac.

      To build from the command line, navigate to your build directory and
      execute the following;
          
              cmake --build . --config {Debug | Release}     
              
      NOTE: "--config {Debug | Release}" may be optional on your platform. We
            recommend choosing either Debug or Release on Windows.                                                                                      
             
      3.1  If you wish to use the Visual Studio environment, open the solution 
           file in your build directory. Be sure to select either Debug or 
           Release and build the solution.
             
      3.2.1  The external libraries (zlib, szip, and jpeg) can be configured
           to allow building the libraries by downloading from a SVN repository.
           The option is 'HDF4_ALLOW_EXTERNAL_SUPPORT'; by adding the following
           configuration option:
               -DHDF4_ALLOW_EXTERNAL_SUPPORT:STRING="SVN"
               
           The options to control the SVN URL (config/cmake/cacheinit.cmake file):
               JPEG_SVN_URL:STRING="http://svn.hdfgroup.uiuc.edu/jpeg/branches/jpeg8b"
               ZLIB_SVN_URL:STRING="http://svn.hdfgroup.uiuc.edu/zlib/trunk"
               SZIP_SVN_URL:STRING="http://svn.hdfgroup.uiuc.edu/szip/trunk"
           These should be changed to your location.
           
      3.2.2  Or the external libraries (zlib, szip, and jpeg) can be configured
           to allow building the libraries by using a compressed file.
           The option is 'HDF4_ALLOW_EXTERNAL_SUPPORT'; by adding the following
           configuration option:
               -DHDF4_ALLOW_EXTERNAL_SUPPORT:STRING="TGZ"
               
           The options to control the SVN URL (config/cmake/cacheinit.cmake file):
               JPEG_TGZ_NAME:STRING="jpeg_src.ext"
               ZLIB_TGZ_NAME:STRING="zlib_src.ext"
               SZIP_TGZ_NAME:STRING="szip_src.ext"
               TGZ_PATH:STRING="some_location"
            where "some_location/xxxx_src.ext" is the URL or full path to the 
            compressed file and where ext is the type of the compression file like:
               .bz2, .tar, .tar.gz, .tgz, .zip

   4. Test HDF4.

      To test the build, navigate to your build directory and execute;
      
              ctest . -C {Debug | Release}
              
      NOTE: "-C {Debug | Release}" may be optional on your platform. We
            recommend choosing either Debug or Release to match the build
            step on Windows.                                                                                      

   5. Packaging HDF4
   
      To package the build into a simple installer using the NullSoft installer NSIS
      on Windows, or into compressed files (.tar.gz, .sh, .zip), use the CPack tool.

      To package the build, navigate to your build directory and execute;
      
              cpack -C {Debug | Release} CPackConfig.cmake
      
      NOTE: We have just introduced the packaging capability and it has not been 
            extensively tested. Please send us comments on how it can be improved.
            See NSIS note 8 of this document.
           
   6. The files that support building HDF4 with CMake are all the files in the 
      config/cmake folder, the CMakeLists.txt files in each source folder, and 
      CTestConfig.cmake. CTestConfig.cmake is specific to the internal testing 
      performed by The HDF Group. It should be altered for the users 
      installation and needs.

   7. More information about using CMake can be found at the KitWare site, 
      www.cmake.org.

   8. Nullsoft Scriptable Install System
      The Nullsoft Scriptable Install System (NSIS) is an open source installation 
      system. It was created by the WinAmp authors to distribute that application, 
      but it is now a general-purpose system which anyone might use. NSIS installers 
      recognize /S for silent installation and /D=dir to specify the 
      "output directory", which is where the program will be installed. These 
      options are case-sensitive, so be sure to type them in upper case. 



************************************************************************

Need further assistance, send email to help@hdfgroup.org

