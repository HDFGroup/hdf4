name: netCDF dev

on:
  workflow_dispatch:
  push:
  pull_request:
    branches: [ master ]
    paths-ignore:
    - '.github/CODEOWNERS'
    - 'release_notes/**'
    - 'COPYING'
    - '**.md'

permissions:
  contents: read

# Using concurrency to cancel any in-progress job or run
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Install System dependencies
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build
        sudo apt install libssl3 libssl-dev libcurl4
        sudo apt install -y automake autoconf libtool libtool-bin
        sudo apt install -y libaec-dev zlib1g-dev libcurl4-openssl-dev libjpeg-dev wget curl
        sudo apt install -y bzip2 m4 flex bison cmake libzip-dev doxygen openssl

    - name: Checkout HDF4
      uses: actions/checkout@v4.1.7

    - name: Install HDF4
      run: |
        ./autogen.sh
        ./configure --prefix=/usr/local --disable-netcdf --disable-netcdf-tools --enable-shared --with-szlib
        make -j
        sudo make install -j

    - name: Checkout HDF5
      uses: actions/checkout@v4.1.7
      with:
        repository: HDFGroup/hdf5
        path: hdf5
        ref: hdf5_1.14.5

    - name: CMake Configure HDF5
      run: |
          mkdir "${{ runner.workspace }}/build5"
          cd "${{ runner.workspace }}/build5"
          cmake -C $GITHUB_WORKSPACE/hdf5/config/cmake/cacheinit.cmake \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DHDF4_BUILD_FORTRAN:BOOL=OFF \
            -DHDF4_BUILD_JAVA:BOOL=OFF \
            -DHDF4_BUILD_EXAMPLES:BOOL=OFF \
            -DLIBAEC_USE_LOCALCONTENT:BOOL=OFF \
            -DZLIB_USE_LOCALCONTENT:BOOL=OFF \
            -DBUILD_TESTING:BOOL=OFF \
            -DBUILD_STATIC_LIBS:BOOL=OFF \
            -DCMAKE_INSTALL_PREFIX:PATH=/usr/local \
            $GITHUB_WORKSPACE/hdf5
      shell: bash

    - name: CMake Build HDF5
      run: cmake --build . --parallel 3 --config Release
      working-directory: ${{ runner.workspace }}/build5

    - name: Install HDF5
      run: |
        sudo cmake --install . --config Release --prefix="/usr/local"
      working-directory: ${{ runner.workspace }}/build5

    - name: Checkout netCDF
      uses: actions/checkout@v4.1.7
      with:
        repository: unidata/netcdf-c
        path: netcdf-c

    - name: Test netCDF
      run: |
        cd netcdf-c
        autoreconf -if
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} ./configure --enable-hdf5 --enable-hdf4 --enable-hdf4-file-tests --enable-dap --disable-dap-remote-tests --enable-external-server-tests
        cat config.log
        cat libnetcdf.settings
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} make -j
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} make check TESTS="" -j
        LD_LIBRARY_PATH="/home/runner/work/hdf4/hdf4/netcdf-c/liblib/.libs:/usr/local/lib:${LD_LIBRARY_PATH}"
        CFLAGS=${CFLAGS} LDFLAGS=${LDFLAGS} LD_LIBRARY_PATH=${LD_LIBRARY_PATH} make check -j
      continue-on-error: true
