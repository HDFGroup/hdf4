##############################################################################
## This file was taken from the Cygnus Toolkit distribution and used as
## as a template.

## This file is a Bourne shell script fragment that supplies the information
## necessary to tailor a template configure script into the configure
## script appropriate for this directory.  For more information, check
## any existing configure script.  

## Be warned, there are two types of configure.in files.  There are those
## used by Autoconf, which are macros which are expanded into a configure
## script by autoconf.  The other sort, of which this is one, is executed
## by Cygnus configure.  

## For more information on these two systems, check out the documentation
## for 'Autoconf' (autoconf.texi) and 'Configure' (configure.texi) or
## the official documentation on these packages.  

##############################################################################

# Right now the JPEG has still needs a seperate makefile fragmenet
# So we run configure here i.e we use configure.in and config/ 
# directory found in the hdf/jpeg to build the configuration.
host_libs="hdf/jpeg"

# The followin features Not yet implemented
#echo "without options are $withoutoptions"
# without options for packages e.g 'jpeg'
for wooption in $withoutoptions ; do
if [ "$wooption" = "--without-jpeg" ] ; then 
   host_libs=""
fi
done

# Add file cache directory as a directory to run configure in also
# since this is a self contained package that was setup 
# using Cygnus configuration software.
host_libs="$host_libs hdf/fmpool"

# Not yet implemented
#echo "enabled options are $enableoptions"
# enabled options 'fmpool', 'pablo'
#for eoption in $enableoptions ; do
#if [ "$eoption" = "--enable-pablo" ] ; then 
#   host_libs="$host_libs hdf/pablo"
#fi
#if [ "$eoption" = "--enable-fmpool" ] ; then 
#   host_libs="$host_libs hdf/fmpool"
#fi
#done
#echo "host libs are $host_libs"

## We assign ${configdirs} this way to remove all embedded newlines.  This
## is important because configure will choke if they ever get through.
#
configdirs=`echo ${host_libs}`

#
#Directories we want configure to generate Makefiles from Makefile.in
#
subdirs="hdf man hdf/src hdf/zlib hdf/slib hdf/test hdf/util hdf/pablo mfhdf mfhdf/xdr mfhdf/port mfhdf/libsrc mfhdf/dumper mfhdf/nctest mfhdf/ncgen mfhdf/ncdump mfhdf/fortran mfhdf/doc mfhdf/pablo mfhdf/hdfimport mfhdf/hdiff mfhdf/hzip"

################################################################################

srctrigger=move-if-change
srcname="HDF/netCDF library"

# This gets set non-empty for some net releases of packages.
appdirs=""

# per-host:

# Work in distributions for each host makefile fragment
host_makefile_frag=""
if [ -d ${srcdir}/config ]; then
case "${host}" in
  alpha-*-*)         	  host_makefile_frag=config/mh-alpha ;;
  mips*-dec-ultrix*)      host_makefile_frag=config/mh-decstation ;;
  mips*-sgi-irix6.*)      host_makefile_frag=config/mh-irix6 ;;
  mips*-sgi-irix6_32*)    host_makefile_frag=config/mh-irix32 ;;
  mips*-sgi-irix5*)       host_makefile_frag=config/mh-irix5 ;;
  mips*-sgi-irix4*)       host_makefile_frag=config/mh-irix4 ;;
  i[3456]86-*-linux*)     host_makefile_frag=config/mh-linux ;;
  i[3456]86-*-freebsd*)   host_makefile_frag=config/mh-fbsd ;;
  ia64-*-*)               host_makefile_frag=config/mh-ia64 ;;
  *-ibm-aix*)             host_makefile_frag=config/mh-aix ;;
  i386-*-solaris2*)       host_makefile_frag=config/mh-solarisx86 ;;
  sparc64-*-solaris2*)    host_makefile_frag=config/mh-solaris64 ;;
  *-*-solaris2*)          host_makefile_frag=config/mh-solaris ;;
  *-sun-*)                host_makefile_frag=config/mh-sun ;;
  *-hp-hpux11*)           host_makefile_frag=config/mh-hpux11 ;;
  *-hp-hpux*)             host_makefile_frag=config/mh-hpux ;;
  *-convex-bsd*)          host_makefile_frag=config/mh-convex ;;
  *-cray-unicos*)         host_makefile_frag=config/mh-unicos ;;
  t3*-cray-craympp)       host_makefile_frag=config/mh-t3e ;;
  S370-fujitsu-sysv*)     host_makefile_frag=config/mh-fujivp ;;
  *-mac-*)                host_makefile_frag=config/mh-mac ;;
esac
fi

# Check for valid platfroms before we continue
if [ "${host_makefile_frag}" = "" ] ; then
    echo '***' "The HDF/netCDF library is not supported on host ${host}" 1>&2
    exit 1
fi

# make sure makefile fragment is there
if [ ! -f ${srcdir}/${host_makefile_frag} ]; then
    echo '***' "We are missing makefile fragment ${host_makefile_frag}" 1>&2
    echo '***' "Please read the installation docs" 1>&2
    exit 1
fi


# The Solaris /usr/ucb/cc compiler does not appear to work.
case "${host}" in
  sparc*-sun-solaris2*)
      if [ "`/usr/bin/which ${CC-cc}`" = "/usr/ucb/cc" ] ; then
          could_use=
          [ -d /opt/SUNWspro/bin ] && could_use="/opt/SUNWspro/bin"
          if [ -d /opt/cygnus/bin ] ; then
              if [ "$could_use" == "" ] ; then
                  could_use="/opt/cygnus/bin"
              else
                  could_use="$could_use or /opt/cygnus/bin"
              fi
          fi
        if [ "$could_use" = "" ] ; then
            echo "Warning: compilation may fail because you're using"
            echo "/usr/ucb/cc.  You should change your PATH or CC "
            echo "variable and rerun configure."
        else
            echo "Warning: compilation may fail because you're using"
            echo "/usr/ucb/cc, when you should use the C compiler from"
            echo "$could_use.  You should change your"
            echo "PATH or CC variable and rerun configure."
        fi
      fi
  ;;
esac

# per-target:

# 
# Set proper files that need to linked to the correct pre-generated
# configuration files. These are mainly on the MFHDF side as 
# the HDF side stuff is taken care of in the configure.in found
# in two directories hdf/fmpool and hdf/jpeg respectively.
files=
links="mfhdf/libsrc/netcdf.h mfhdf/fortran/jackets.c mfhdf/fortran/netcdf.inc mfhdf/fortran/ftest.f"
if [ -d ${srcdir}/config ]; then
case "${host}" in
  alpha-*-*)              files="mfhdf/libsrc/config/netcdf-alpha.h mfhdf/fortran/config/jackets-alpha.c mfhdf/fortran/config/netcdf-alpha.inc mfhdf/fortran/config/ftest-alpha.f" ;;
  mips*-dec-ultrix*)      files="mfhdf/libsrc/config/netcdf-dec.h mfhdf/fortran/config/jackets-dec.c mfhdf/fortran/config/netcdf-dec.inc mfhdf/fortran/config/ftest-dec.f" ;;
  mips*-sgi-irix6.*)      files="mfhdf/libsrc/config/netcdf-irix6.h mfhdf/fortran/config/jackets-irix6.c mfhdf/fortran/config/netcdf-irix6.inc mfhdf/fortran/config/ftest-irix6.f" ;;
  mips*-sgi-irix6_32*)    files="mfhdf/libsrc/config/netcdf-irix32.h mfhdf/fortran/config/jackets-irix32.c mfhdf/fortran/config/netcdf-irix32.inc mfhdf/fortran/config/ftest-irix32.f" ;;
  mips*-sgi-irix5*)       files="mfhdf/libsrc/config/netcdf-irix5.h mfhdf/fortran/config/jackets-irix5.c mfhdf/fortran/config/netcdf-irix5.inc mfhdf/fortran/config/ftest-irix5.f" ;;
  mips*-sgi-irix4*)       files="mfhdf/libsrc/config/netcdf-irix4.h mfhdf/fortran/config/jackets-irix4.c mfhdf/fortran/config/netcdf-irix4.inc mfhdf/fortran/config/ftest-irix4.f" ;;
  i[3456]86-*-linux*)     files="mfhdf/libsrc/config/netcdf-linux.h mfhdf/fortran/config/jackets-linux.c mfhdf/fortran/config/netcdf-linux.inc mfhdf/fortran/config/ftest-linux.f" ;;
  i[3456]86-*-freebsd*)   files="mfhdf/libsrc/config/netcdf-fbsd.h mfhdf/fortran/config/jackets-fbsd.c mfhdf/fortran/config/netcdf-fbsd.inc mfhdf/fortran/config/ftest-fbsd.f" ;;
  ia64-*-*)               files="mfhdf/libsrc/config/netcdf-ia64.h mfhdf/fortran/config/jackets-ia64.c mfhdf/fortran/config/netcdf-ia64.inc mfhdf/fortran/config/ftest-ia64.f" ;;
  *-ibm-aix*)             files="mfhdf/libsrc/config/netcdf-aix.h mfhdf/fortran/config/jackets-aix.c mfhdf/fortran/config/netcdf-aix.inc mfhdf/fortran/config/ftest-aix.f" ;;
  i386-*-solaris2*)       files="mfhdf/libsrc/config/netcdf-solarisx86.h mfhdf/fortran/config/jackets-solarisx86.c mfhdf/fortran/config/netcdf-solarisx86.inc mfhdf/fortran/config/ftest-solarisx86.f" ;;
  sparc64-*-solaris2*)          files="mfhdf/libsrc/config/netcdf-solaris64.h mfhdf/fortran/config/jackets-solaris64.c mfhdf/fortran/config/netcdf-solaris64.inc mfhdf/fortran/config/ftest-solaris64.f";;
  *-*-solaris2*)          files="mfhdf/libsrc/config/netcdf-solaris.h mfhdf/fortran/config/jackets-solaris.c mfhdf/fortran/config/netcdf-solaris.inc mfhdf/fortran/config/ftest-solaris.f";;
  *-sun-*)		          files="mfhdf/libsrc/config/netcdf-sun.h mfhdf/fortran/config/jackets-sun.c mfhdf/fortran/config/netcdf-sun.inc mfhdf/fortran/config/ftest-sun.f";;
  *-hp-hpux*)             files="mfhdf/libsrc/config/netcdf-hpux.h mfhdf/fortran/config/jackets-hpux.c mfhdf/fortran/config/netcdf-hpux.inc mfhdf/fortran/config/ftest-hpux.f";;
  *-convex-bsd*)          files="mfhdf/libsrc/config/netcdf-convex.h mfhdf/fortran/config/jackets-convex.c mfhdf/fortran/config/netcdf-convex.inc mfhdf/fortran/config/ftest-convex.f" ;;
  *-cray-unicos*)         files="mfhdf/libsrc/config/netcdf-unicos.h mfhdf/fortran/config/jackets-unicos.c mfhdf/fortran/config/netcdf-unicos.inc mfhdf/fortran/config/ftest-unicos.f" ;;
  t3*-cray-craympp)       files="mfhdf/libsrc/config/netcdf-t3e.h mfhdf/fortran/config/jackets-t3e.c mfhdf/fortran/config/netcdf-t3e.inc mfhdf/fortran/config/ftest-t3e.f" ;;
  S370-fujitsu-sysv*)     files="mfhdf/libsrc/config/netcdf-fujivp.h mfhdf/fortran/config/jackets-fujivp.c mfhdf/fortran/config/netcdf-fujivp.inc mfhdf/fortran/config/ftest-fujivp.f" ;;
  *-mac-*)		          files="mfhdf/libsrc/config/netcdf-mac.h mfhdf/fortran/config/jackets-mac.c mfhdf/fortran/config/netcdf-mac.inc mfhdf/fortran/config/ftest-mac.f" ;;
esac
fi

# make sure host specific files are there
#if [ ! -f ${srcdir}/${files} ]; then
#    echo '***' "We are missing host specific customize file ${files}" 1>&2
#    echo '***' "Please read the installation docs" 1>&2
#    exit 1
#fi

# Decided to copy files instead of using symbolic links.
#
# Now for Mac and PC configurations we want to copy and not use symbolic
# links. You can use this also for any platfrom you want.
if [ -d ${srcdir}/config ]; then
case "${host}" in
  *-mac-*)             symbolic_link="cp -p" ;;
  *-win-*)             symbolic_link="cp -p" ;;
  *)                   symbolic_link="cp" ;;
esac
fi

# post-target:

# We don't have anything

#
# Local Variables:
# fill-column: 131
# End:
#
