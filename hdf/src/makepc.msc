# ****************************************************************************
# * NCSA HDF                                                                 *
# * Software Development Group                                               *
# * National Center for Supercomputing Applications                          *
# * University of Illinois at Urbana-Champaign                               *
# * 605 E. Springfield, Champaign IL 61820                                   *
# *                                                                          *
# * For conditions of distribution and use, see the accompanying             *
# * hdf/COPYING file.                                                        *
# *                                                                          *
# ***************************************************************************
#
# $Id$
#
#
# ##################################################################
#
#           MAKEFILE for creating the HDF library, libdf.a,
#
# This makefile creates the following FORTRAN and C interfaces 
# for HDF in a library called "df.lib": 
#
#              DFR8   (8-bit raster image sets)
#              DF24   (24-bit raster image sets)
#              DFP    (palettes)
#              DFSD   (scientific data sets)
#              DFAN   (annotations)
#              V      (vsets)
#
# See the file INSTALL for further information on how to invoke
# this makefile.
#
# This release of HDF marks the first use of a new set of lower
# level routines.  The makefile also creates these interfaces,
# which are available in C only.  These routines are categorized 
# as follows:
#
#              H      (new lower level i/o)
#              DF     (emulation of old lower level i/o routines)
#              HD     (lower level utilities for developers)
#              HE     (lower level error-handling)
#              HD     (lower level utilities, for developers)
#              DFK    (conversion routines)
#
# ##################################################################
#
#
# PORTING INSTRUCTIONS
# You must modify the lines marked "# ==>".
#

.SUFFIXES : .f

# ==> specify your machine
MACHINE=PC

INCDIR=..\include
LIBDIR=..\lib
BINDIR=..\bin

# ==> where are your hdf.h, hdfi.h and vg.h files located?
IFLAGS=   /I$(INCDIR) /I.

# ==> specify your FORTRAN compiler
FC=fl
#FFLAGS= /Gt64 /AH $(IFLAGS) /W2 /Od /Tf
FFLAGS= /AH $(IFLAGS) /W2 /Od /Tf
#FFLAGS= /Gt64 /AH $(IFLAGS) /W2 /Ox /Tf

# ==> specify your C compiler
CC=cl
#CFLAGS=  /D$(MACHINE) /Gt64 /AH /W4 /Ozaxb2 $(IFLAGS) /Zl
#CFLAGS=  /D$(MACHINE) /Gt64 /AH /W4 /Od $(IFLAGS) /Zi /Zl /DMALDEBUG
CFLAGS=  /D$(MACHINE) /Gt32 /AH /W4 /Od $(IFLAGS) /Zi /Zl /Gs /FPi87
#CFLAGS=  /D$(MACHINE) /Gt64 /AH /W4 /Od $(IFLAGS) /C /P
#CFLAGS=  /D$(MACHINE) /Gt64 /AH /W4 /Od $(IFLAGS) /Zg

# ==> where is your HDF library (df.lib) located?
LIBS= $(LIBDIR)\df.lib

# ==> specify your archiver
AR=lib
ARFLAGS=/PAGE:32
ARFLAGS2=/NOLOGO +

# ==> specify your archive randomizer
#RANLIB=ranlib

RM=del
RMFLAGS=
LINTFLAGS=

HDRS=hfile.h hdf.h hdfi.h herr.h hproto.h dfan.h dfrig.h dfgr.h dfsd.h \
     dfgroup.h vg.h df.h dfi.h dfstubs.h dfutil.h hconv.h tbbt.h

CSRCS=hfile.c herr.c hblocks.c hextelt.c hkit.c dfan.c dfr8.c dfcomp.c \
      dfrle.c dfimcomp.c dfjpeg.c dfunjpeg.c dfp.c dfgr.c df24.c dfsd.c \
      dfgroup.c dfconv.c dfufp2i.c vg.c vrw.c vio.c vparse.c vconv.c vsfld.c \
      vgp.c vhi.c dfutil.c dfstubs.c dfknat.c dfkswap.c dfkcray.c dfkvms.c \
      dfkconv.c dfkfuji.c tbbt.c hdfalloc.c maldebug.c

COBJS=hfile.obj herr.obj hblocks.obj hextelt.obj hkit.obj dfan.obj dfr8.obj \
        dfcomp.obj dfrle.obj dfimcomp.obj dfjpeg.obj dfunjpeg.obj dfp.obj \
        dfgr.obj df24.obj dfsd.obj dfgroup.obj dfconv.obj dfufp2i.obj vg.obj \
        vrw.obj vio.obj vparse.obj vconv.obj vsfld.obj vgp.obj vhi.obj \
        dfutil.obj dfstubs.obj dfknat.obj dfkswap.obj dfkcray.obj dfkvms.obj \
        dfkconv.obj dfkfuji.obj tbbt.obj hdfalloc.obj maldebug.obj

FSRCS=hfilef.c herrf.c dfanf.c dfr8f.c dfpf.c df24f.c dfsdf.c vgf.c dff.c \
      dfutilf.c hfileff.f dfanff.f df24ff.f dfpff.f dfr8ff.f dfsdff.f vgff.f \
      dfff.f dfufp2if.f

FOBJS=hfilef.obj herrf.obj dfanf.obj dfr8f.obj dfpf.obj df24f.obj dfsdf.obj \
      vgf.obj dff.obj dfutilf.obj hfileff.obj dfanff.obj df24ff.obj dfpff.obj \
      dfr8ff.obj dfsdff.obj vgff.obj dfff.obj dfufp2if.obj

JCSRCS= jbsmooth.c jcarith.c jccolor.c jcdeflts.c jcexpand.c jchuff.c \
        jcmain.c jcmaster.c jcmcu.c jcpipe.c jcsample.c jdarith.c jdcolor.c \
        jddeflts.c jdhuff.c jdmain.c jdmaster.c jdmcu.c jdpipe.c jdsample.c \
        jerror.c jquant1.c jquant2.c jfwddct.c jrevdct.c jutils.c jmemmgr.c \
        jrdjfif.c jrdgif.c jrdppm.c jrdrle.c jrdtarga.c jwrjfif.c jwrgif.c \
        jwrppm.c jwrrle.c jwrtarga.c jmemsys.c

JINCS= jinclude.h jconfig.h jpegdata.h jversion.h jmemsys.h egetopt.c

# objectfiles common to both JPEG compression and decompression
COMOBJECTS= jutils.obj jerror.obj jmemmgr.obj jmemsys.obj jmemdosa.obj
# compression objectfiles
CLIBOBJECTS= jcmaster.obj jcdeflts.obj jcarith.obj jccolor.obj jcexpand.obj \
        jchuff.obj jcmcu.obj jcpipe.obj jcsample.obj jfwddct.obj
        
CFILEOBJECTS=jwrjfif.obj jrdgif.obj jrdppm.obj jrdrle.obj jrdtarga.obj

# decompression objectfiles
DLIBOBJECTS= jdmaster.obj jddeflts.obj jbsmooth.obj jdarith.obj jdcolor.obj \
        jdhuff.obj jdmcu.obj jdpipe.obj jdsample.obj jquant1.obj \
        jquant2.obj jrevdct.obj

DFILEOBJECTS=jrdjfif.obj jwrgif.obj jwrppm.obj jwrrle.obj jwrtarga.obj

# These objectfiles are included in libjpeg.lib
JOBJS= $(CLIBOBJECTS) $(DLIBOBJECTS) $(COMOBJECTS)

#add all utilities here
#UTILS=vshow.obj

#.c.obj:
#    $(CC) /c $(CFLAGS) $<
#    $(AR) $(ARFLAGS) df.lib $(ARFLAGS2) $*;

#.f.obj:
#    $(FC) /c $(FFLAGS) $<
#    $(AR) $(ARFLAGS) df.lib $(ARFLAGS2) $*;

all: df.lib install note

allnostub: libnostub install note

df.lib: $(COBJS) $(FOBJS) $(JOBJS)
    del df.lib
    $(AR) $(ARFLAGS) df.lib @hdf.bld;

libnostub: $(COBJS) $(JOBJS)
    del df.lib
    $(AR) $(ARFLAGS) df.lib @hdfnof.bld;

note:
	@echo "^G"
	@echo "***********************************************************"
    @echo " df.lib successfully created."
	@echo ""
	@echo "If you have any old vset files (v 1.0) you must use vcompat"
	@echo "to make them compatible with Vset 2.0 applications"
	@echo ""
	@echo "***********************************************************"
	@echo ""


hfile.obj: hfile.c hfile.h hdf.h herr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

herr.obj: herr.c hdf.h herr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

hblocks.obj: hblocks.c hfile.h hdf.h herr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

hextelt.obj: hextelt.c hfile.h hdf.h herr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

hkit.obj: hkit.c hfile.h hdf.h herr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

hdfalloc.obj: hdfalloc.c hdf.h herr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfan.obj: dfan.c hdf.h herr.h dfan.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfanf.obj: dfanf.c hdf.h herr.h dfan.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfr8.obj: dfr8.c hdf.h herr.h dfrig.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfr8f.obj: dfr8f.c hdf.h herr.h dfrig.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfcomp.obj: dfcomp.c hdf.h herr.h dfrig.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfimcomp.obj: dfimcomp.c hdf.h herr.h dfrig.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfrle.obj: dfrle.c hdf.h herr.h dfrig.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfjpeg.obj: dfjpeg.c hdf.h herr.h dfrig.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfunjpeg.obj: dfunjpeg.c hdf.h herr.h dfrig.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfp.obj: dfp.c hdf.h herr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfpf.obj: dfpf.c hdf.h herr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfgr.obj: dfgr.c hdf.h herr.h dfgr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

df24.obj: df24.c hdf.h herr.h dfgr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

df24f.obj: df24f.c hdf.h herr.h dfgr.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfsd.obj: dfsd.c hdf.h herr.h dfsd.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfsdf.obj: dfsdf.c hdf.h herr.h dfsd.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfgroup.obj: dfgroup.c hdf.h herr.h hfile.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfconv.obj: dfconv.c hdf.h herr.h hdfi.h hconv.h
    $(CC) /c $(CFLAGS) %s

dfknat.obj: dfknat.c hdf.h herr.h hdfi.h hconv.h
    $(CC) /c $(CFLAGS) %s

dfkswap.obj: dfkswap.c hdf.h herr.h hdfi.h hconv.h
    $(CC) /c $(CFLAGS) %s

dfkcray.obj: dfkcray.c hdf.h herr.h hdfi.h hconv.h
    $(CC) /c $(CFLAGS) %s

dfkvms.obj: dfkvms.c hdf.h herr.h hdfi.h hconv.h
    $(CC) /c $(CFLAGS) %s

dfkconv.obj: dfkconv.c hdf.h herr.h hdfi.h hconv.h
    $(CC) /c $(CFLAGS) %s

dfkfuji.obj: dfkfuji.c hdf.h herr.h hdfi.h hconv.h
    $(CC) /c $(CFLAGS) %s

vg.obj: vg.c vg.h hdf.h hdfi.h
    $(CC) /c $(CFLAGS) %s

vgf.obj: vgf.c vg.h hdf.h hdfi.h
    $(CC) /c $(CFLAGS) %s

vrw.obj: vrw.c vg.h hdf.h hdfi.h
    $(CC) /c $(CFLAGS) %s

vio.obj: vio.c vg.h hdf.h hdfi.h
    $(CC) /c $(CFLAGS) %s

vparse.obj: vparse.c vg.h hdf.h hdfi.h
    $(CC) /c $(CFLAGS) %s

vconv.obj: vconv.c vg.h hdf.h hdfi.h
    $(CC) /c $(CFLAGS) %s

vsfld.obj: vsfld.c vg.h hdf.h hdfi.h
    $(CC) /c $(CFLAGS) %s

vgp.obj: vgp.c vg.h hdf.h hdfi.h
    $(CC) /c $(CFLAGS) %s

vhi.obj: vhi.c vg.h hdf.h hdfi.h
    $(CC) /c $(CFLAGS) %s

tbbt.obj: tbbt.c tbbt.h hdfi.h
    $(CC) /c $(CFLAGS) %s

maldebug.obj : maldebug.c maldebug.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dfstubs.obj: dfstubs.c hdf.h herr.h dfstubs.h df.h dfi.h hdfi.h
    $(CC) /c $(CFLAGS) %s

dff.obj: dff.c hdf.h herr.h dfstubs.h df.h dfi.h hdfi.h
    $(CC) /c $(CFLAGS) %s

hfileff.obj : hfileff.f
    $(FC) /c $(FFLAGS) %s

dfanff.obj : dfanff.f
    $(FC) /c $(FFLAGS) %s

df24ff.obj : df24ff.f
    $(FC) /c $(FFLAGS) %s

dfpff.obj : dfpff.f
    $(FC) /c $(FFLAGS) %s

dfr8ff.obj : dfr8ff.f
    $(FC) /c $(FFLAGS) %s

dfsdff.obj : dfsdff.f
    $(FC) /c $(FFLAGS) %s

vgff.obj : vgff.f
    $(FC) /c $(FFLAGS) %s

dfff.obj : dfff.f
    $(FC) /c $(FFLAGS) %s

dfufp2if.obj : dfufp2if.f
    $(FC) /c $(FFLAGS) %s

# JPEG source files
jbsmooth.obj : jbsmooth.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jcarith.obj : jcarith.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jccolor.obj : jccolor.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jcdeflts.obj : jcdeflts.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jcexpand.obj : jcexpand.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jchuff.obj : jchuff.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

#jcmain.obj : jcmain.c jinclude.h jconfig.h jpegdata.h jversion.h egetopt.c
#    $(CC) /c $(CFLAGS) %s

jcmaster.obj : jcmaster.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jcmcu.obj : jcmcu.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jcpipe.obj : jcpipe.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jcsample.obj : jcsample.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jdarith.obj : jdarith.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jdcolor.obj : jdcolor.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jddeflts.obj : jddeflts.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jdhuff.obj : jdhuff.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

#jdmain.obj : jdmain.c jinclude.h jconfig.h jpegdata.h jversion.h egetopt.c
#    $(CC) /c $(CFLAGS) %s

jdmaster.obj : jdmaster.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jdmcu.obj : jdmcu.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jdpipe.obj : jdpipe.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jdsample.obj : jdsample.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jerror.obj : jerror.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jquant1.obj : jquant1.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jquant2.obj : jquant2.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jfwddct.obj : jfwddct.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jrevdct.obj : jrevdct.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jutils.obj : jutils.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jmemmgr.obj : jmemmgr.c jinclude.h jconfig.h jpegdata.h jmemsys.h
    $(CC) /c $(CFLAGS) %s

jrdjfif.obj : jrdjfif.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jrdgif.obj : jrdgif.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jrdppm.obj : jrdppm.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jrdrle.obj : jrdrle.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jrdtarga.obj : jrdtarga.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jwrjfif.obj : jwrjfif.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jwrgif.obj : jwrgif.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jwrppm.obj : jwrppm.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jwrrle.obj : jwrrle.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jwrtarga.obj : jwrtarga.c jinclude.h jconfig.h jpegdata.h
    $(CC) /c $(CFLAGS) %s

jmemsys.obj : jmemsys.c jinclude.h jconfig.h jpegdata.h jmemsys.h
    $(CC) /c $(CFLAGS) %s


jmemdosa.obj : jmemdosa.asm
	masm /mx $*;


install:
	-mkdir $(INCDIR)
    -copy *.h $(INCDIR)
	-mkdir $(LIBDIR)
    -copy df.lib $(LIBDIR)

clean:
    -$(RM) $(RMFLAGS) *.obj

cleanup:
	-$(RM) $(RMFLAGS) libdf.a $(UTILS)

lint: $(SRCS) $(R8SRCS)
	$(LINT) $(LINTFLAGS) $(SRCS)

TAGS: $(SRCS) $(HDRS)
	etags $(SRCS) $(HDRS)

