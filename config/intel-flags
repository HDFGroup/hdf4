#                                                   -*- shell-script -*-
#
# This file is part of the HDF4 build script. It is processed shortly
# after configure starts and defines, among other things, flags for
# the various compilation modes.

#
# Prepend `$srcdir/config/intel-warnings/` to the filename suffix(es) given as
# subroutine argument(s), remove comments starting with # and ending
# at EOL, replace spans of whitespace (including newlines) with spaces,
# and re-emit the file(s) thus filtered on the standard output stream.
#
load_intel_arguments()
{
    set -- $(for arg; do
        sed 's,#.*$,,' $srcdir/config/intel-warnings/${arg}
    done)
    IFS=' ' echo "$*"
}

# Get the compiler version in a way that works for icc
# icc unless a compiler version is already known
#
#   cc_vendor:    The compiler name: icc
#   cc_version:   Version number: 8.0
#
if test X = "X$cc_flags_set"; then
    cc_version="`$CC $CFLAGS $H4_CFLAGS -V 2>&1 |grep 'Version'`"
    if test X != "X$cc_version"; then
        cc_vendor=icc
        cc_version=`echo $cc_version |sed 's/.*Version \([-a-z0-9\.\-]*\).*/\1/'`
        echo "compiler '$CC' is Intel $cc_vendor-$cc_version"

        # Some version numbers
        # Intel version numbers are of the form: "major.minor"
        cc_vers_major=`echo $cc_version | cut -f1 -d.`
        cc_vers_minor=`echo $cc_version | cut -f2 -d.`
        #cc_vers_patch=`echo $cc_version | cut -f2 -d.`
        test -n "$cc_vers_major" || cc_vers_major=0
        test -n "$cc_vers_minor" || cc_vers_minor=0
        test -n "$cc_vers_patch" || cc_vers_patch=0
        cc_vers_all=`expr $cc_vers_major '*' 1000000 + $cc_vers_minor '*' 1000 + $cc_vers_patch`
    fi
fi

# Common Intel flags for various situations
if test "X-icc" = "X-$cc_vendor" -o "X-icx" = "X-$cc_vendor"; then


    ###########
    # General #
    ###########

    # Default to C99 standard.
    # -diag-disable=10441 disables the icc deprecation message
    H4_CFLAGS="$H4_CFLAGS -std=c99 -diag-disable=10441"
    H4_CFLAGS="$H4_CFLAGS -Wno-error=implicit-function-declaration"

    ##############
    # Production #
    ##############

    PROD_CFLAGS=

    #########
    # Debug #
    #########

    # NDEBUG is handled explicitly in configure
    DEBUG_CFLAGS=

    ###########
    # Symbols #
    ###########

    NO_SYMBOLS_CFLAGS="-Wl,-s"
    SYMBOLS_CFLAGS="-g"

    #############
    # Profiling #
    #############

    PROFILE_CFLAGS="-p"

    ################
    # Optimization #
    ################

    HIGH_OPT_CFLAGS="-O3"
    DEBUG_OPT_CFLAGS="-O0"
    NO_OPT_CFLAGS="-O0"

    ############
    # Warnings #
    ############

    ###########
    # General #
    ###########

    # Add various general warning flags in intel-warnings.
    H4_CFLAGS="$H4_CFLAGS $(load_intel_arguments general)"

    #################
    # Flags are set #
    #################
    cc_flags_set=yes
fi

# Clear cc info if no flags set
if test "X-$cc_flags_set" = "X-"; then
    cc_vendor=
    cc_version=
fi
