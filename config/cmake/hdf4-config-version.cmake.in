#-----------------------------------------------------------------------------
# HDF4 Version file for install directory
#-----------------------------------------------------------------------------
#
# The created file sets PACKAGE_VERSION_EXACT if the current version string and
# the requested version string are exactly the same and it sets
# PACKAGE_VERSION_COMPATIBLE if the current version is >= requested version,
# but only if the requested major.minor version is the same as the current one.
# The variable HDF4_VERSION_STRING must be set before calling configure_file().

set (PACKAGE_VERSION "@HDF4_VERSION_STRING@")

if("${PACKAGE_VERSION}" VERSION_LESS "${PACKAGE_FIND_VERSION}" )
  set(PACKAGE_VERSION_COMPATIBLE FALSE)
else()
  if ("${PACKAGE_FIND_VERSION_MAJOR}" STREQUAL "@H4_VERS_MAJOR@")

    # exact match for version @H5_VERS_MAJOR@.@H4_VERS_MINOR@
    if ("${PACKAGE_FIND_VERSION_MINOR}" STREQUAL "@H4_VERS_MINOR@")

      # compatible with any version @H4_VERS_MAJOR@.@H4_VERS_MINOR@.x
      set (PACKAGE_VERSION_COMPATIBLE TRUE) 
    
      if ("${PACKAGE_FIND_VERSION_PATCH}" STREQUAL "@H4_VERS_RELEASE@")
        set (PACKAGE_VERSION_EXACT TRUE)

        if ("${PACKAGE_FIND_VERSION_TWEAK}" STREQUAL "@H4_VERS_SUBRELEASE@")
          # not using this yet
        endif ("${PACKAGE_FIND_VERSION_TWEAK}" STREQUAL "@H4_VERS_SUBRELEASE@")
      endif ("${PACKAGE_FIND_VERSION_PATCH}" STREQUAL "@H4_VERS_RELEASE@")
    else ("${PACKAGE_FIND_VERSION_MINOR}" STREQUAL "@H4_VERS_MINOR@")
      set (PACKAGE_VERSION_COMPATIBLE FALSE) 
    endif ("${PACKAGE_FIND_VERSION_MINOR}" STREQUAL "@H4_VERS_MINOR@")
  endif ("${PACKAGE_FIND_VERSION_MAJOR}" STREQUAL "@H4_VERS_MAJOR@")
endif()

# if the installed or the using project don't have CMAKE_SIZEOF_VOID_P set, ignore it:
if("${CMAKE_SIZEOF_VOID_P}"  STREQUAL ""  OR "@CMAKE_SIZEOF_VOID_P@" STREQUAL "")
   return()
endif()

# check that the installed version has the same 32/64bit-ness as the one which is currently searching:
if(NOT "${CMAKE_SIZEOF_VOID_P}" STREQUAL "@CMAKE_SIZEOF_VOID_P@")
  math(EXPR installedBits "@CMAKE_SIZEOF_VOID_P@ * 8")
  set(PACKAGE_VERSION "${PACKAGE_VERSION} (${installedBits}bit)")
  set(PACKAGE_VERSION_UNSUITABLE TRUE)
endif()
